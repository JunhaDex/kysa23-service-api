# DalDal App Api Full Test
# [[[ Login / Sign-up ]]]

### Login
# Request:
# - email (string): 로그인 하는 계정
# - password (string): 비밀번호, 숫자 6자리: 이메일 확인
# - fcm (string): 기기 고유정보
# Response:
# token (string): JWT 토큰 (기기저장용)
# isFirst (boolean): 첫 로그인 여부 (가입정보 미등록 유저)
# 첫 로그인 false: 가입화면 노출, 첫 로그인 true: 바로 리스트화면 노출

POST https://api.kysa.page/user/login
Content-Type: application/json

{
  "email": "",
  "password": "",
  "fcm": "foo-bar"
}

### Update User
# Response:
# message (string): "ok"
# 에러가 없으면 성공 (200 일 시)

PATCH https://api.kysa.page/user/my
Content-Type: application/json
Authorization: Bearer

{
  "bio": "안녕하세요 이은지 입니다.",
  "tweet": "한줄 메세지 몇자 제한인가요?",
  "mbti": "INFJ",
  "interest": "영화보기",
  "ageGroup": [
    20,
    30
  ]
}

### Update User Profile
# Response:
# message (string): "ok"
# 에러가 없으면 성공 (200 일 시)

POST https://api.kysa.page/user/my/image
Content-Type: multipart/form-data; boundary=boundary
Authorization: Bearer

--boundary
Content-Disposition: form-data; name="file"; filename="tester.jpeg"

< ./dump/tester.png
--boundary

# [[[ 조회 (전체, 개별, 나, 전송 건수) ]]]

### User List
# Query:
# page: 현재 (요청) 페이지
# geo: 지역별 필터
# name: 이름 필터 (검색)
# group: 조 필터 (기본정렬)
# Response:
# items (User[]): 유저 목록
# currentPage: 현재 페이지
# totalPage: 전체 페이지 수
# count: 페이지 아이템 수
# >> 유저 목록 정책 <<
# * Bearer 의 유저정보 기준으로 반대성별의 유저만 보여줌
# * 조별, 지역별 검색 기능

GET https://api.kysa.page/user/list?geo=경기&page=1
#GET http://localhost:3000/user/list?geo=경기&page=1
Content-Type: application/json
Authorization: Bearer

### User Detail
# Response:
# self: 내 정보
# * self.count: 오늘 남은 내 일일 이용권 개수
# data: 상대방 정보
# relation: 상대방과 관계
# * none: 아무 상호작용 없음
# * revealed: 나를 알림
# * matched: 매치 성사
GET https://api.kysa.page/user/Z2tzdG1mdHRAbmF2ZXIuY29t
#GET http://localhost:3000/user/Z2tzdG1mdHRAbmF2ZXIuY29t
Content-Type: application/json
Authorization: Bearer


### My Detail
# Response:
# 내 정보 -> 수정은 Update User Profile 참조
#GET https://api.kysa.page/user/my
GET http://localhost:3000/user/my
Content-Type: application/json
Authorization: Bearer

### GET System Count

# [[[ 액션 (상대방에게 나를 알리기, 나를 숨기고 관심 표현하기) ]]]

### Send Match
# Request:
# recipient(string): 상대방 uid
# notify(boolean): 공개여부
POST http://localhost:3000/send/match
Content-Type: application/json
Authorization: Bearer

{
  "recipient": "a2p1bmhhNzdAZ21haWwuY29t",
  "notify": true
}

###
# [[[로그 (나의 Outbox(내가 선택한사람), 나의 Inbox(나를 선택한사람))]]]

### My Outbox
GET http://localhost:3000/send/outbox?page=1
Content-Type: application/json
Authorization: Bearer

### My Inbox
GET http://localhost:3000/send/inbox
Content-Type: application/json
Authorization: Bearer

